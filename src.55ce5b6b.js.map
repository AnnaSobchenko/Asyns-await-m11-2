{"version":3,"sources":["index.js"],"names":["baseUrl","reqServer","url","method","data","options","headers","responce","body","JSON","stringify","fetch","json","then","console","log","refs","listNode","document","querySelector","form","renderPostList","markup","map","post","id","title","text","like","dislike","author","join","innerHTML","addEventListener","e","target","nodeName","closet","dataset","action","Number","textContent","closest","elements","value","confirm","code","shiftKey"],"mappings":";;;AA0EA,aA1EA,QAAA,oBAEA,MAAMA,EAAU,wBAEhB,eAAeC,EAAUC,EAAKC,EAAS,MAAOC,EAAO,IAC7CC,MAAAA,EAAU,CACdF,OAAAA,EACAG,QAAS,CACS,eAAA,oCAQbC,MAJQ,QAAXJ,GAA+B,WAAXA,IACtBE,EAAQG,KAAOC,KAAKC,UAAUN,WAETO,MAAMX,EAAUE,EAAKG,IAC5BO,OAElBX,EAAU,UAAUY,KAAKT,GAAQU,QAAQC,IAAIX,IAE7C,MAAMY,EAAO,CACXC,SAAUC,SAASC,cAAc,cACjCC,KAAMF,SAASC,cAAc,iBAG/B,eAAeE,UACMpB,EAAU,UAAUY,KAAKT,IACpCkB,MAAAA,EAASlB,EACZmB,IACCC,mBAAwBA,EAAKC,qBACvBD,EAAKE,0BACNF,EAAKG,wLAIsCH,EAAKI,6EACEJ,EAAKK,yCAClDL,EAAKM,2BAEhBC,KAAK,IACRf,EAAKC,SAASe,UAAYV,IAI9BD,IACAL,EAAKC,SAASgB,iBAAiB,QAAS,MAAA,IAClCC,GAAsB,SAAtBA,EAAEC,OAAOC,SAAqB,OAC5BX,MAAAA,EAAKS,EAAEC,OAAOE,OAAO,MAAMC,QAAQb,GACT,SAA5BS,EAAEC,OAAOG,QAAQC,eACbtC,YAAoBwB,IAAM,QAAS,CAAEG,KAAMY,OAAON,EAAEC,OAAOM,aAAe,IAChFP,EAAEC,OAAOM,YAAcD,OAAON,EAAEC,OAAOM,aAAe,KAI1DzB,EAAKC,SAASgB,iBAAiB,QAAS,MAAA,IAClCC,GAAsB,WAAtBA,EAAEC,OAAOC,SAAuB,OAC9BX,MAAAA,EAAKS,EAAEC,OAAOO,QAAQ,MAAMJ,QAAQb,GACtCS,GAA4B,SAA5BA,EAAEC,OAAOG,QAAQC,OAAmB,CAChCnC,MAAAA,QAAaH,EAAU,UAAYwB,GACzCT,EAAKI,KAAKuB,SAAShB,KAAKiB,MAAQxC,EAAKuB,KACrCX,EAAKI,KAAKuB,SAASb,OAAOc,MAAQxC,EAAK0B,OACvCd,EAAKI,KAAKuB,SAASjB,MAAMkB,MAAQxC,EAAKsB,MAGtCV,EAAKI,KAAKuB,SAASlB,GAAGmB,MAAQxC,EAAKqB,GAEL,QAA5BS,EAAEC,OAAOG,QAAQC,QACfM,QAAQ,0BACJ5C,EAAU,UAAYwB,EAAI,UAChCJ,OAKNL,EAAKI,KAAKa,iBAAiB,UAAW,MAAA,IAChCC,GAAW,UAAXA,EAAEY,MAAoBZ,EAAEa,SAAU,CACpC/B,EAAKI,KAAKuB,SACJvC,MAAAA,EAAO,CACXuB,KAAMX,EAAKI,KAAKuB,SAAShB,KAAKiB,MAC9Bd,OAAQd,EAAKI,KAAKuB,SAASb,OAAOc,MAClClB,MAAOV,EAAKI,KAAKuB,SAASjB,MAAMkB,OAO5BnB,EAAKT,EAAKI,KAAKuB,SAASlB,GAAGmB,MAEtB,KAAPnB,GACFrB,EAAKwB,KAAO,EACZxB,EAAKyB,QAAU,QACT5B,EAAU,SAAU,OAAQG,UAE5BH,YAAoBwB,IAAM,QAASrB","file":"src.55ce5b6b.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst baseUrl = 'http://localhost:3000';\n\nasync function reqServer(url, method = 'GET', data = {}) {\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  if (method !== 'GET' && method !== 'DELETE') {\n    options.body = JSON.stringify(data);\n  }\n  const responce = await fetch(baseUrl + url, options);\n  return responce.json();\n}\nreqServer('/posts').then(data => console.log(data));\n\nconst refs = {\n  listNode: document.querySelector('.post-list'),\n  form: document.querySelector('#create-post'),\n};\n\nasync function renderPostList() {\n  const data = await reqServer('/posts').then(data => {\n    const markup = data\n      .map(\n        post => `<li data-id=\"${post.id}\">\n        <h3>${post.title}</h3>\n        <p>${post.text}</p>\n        <button data-action=\"del\">DELETE</button> \n        <button data-action=\"edit\">EDIT</button>\n        <div>\n        <span class=\"like\" data-actio=\"like\">&#128077;${post.like}</span>\n        <span class=\"dislike\" data-action=\"dislike\">&#128078;${post.dislike}</span></div>\n        <small> ${post.author}</small></p></li>`,\n      )\n      .join('');\n    refs.listNode.innerHTML = markup;\n  });\n}\n\nrenderPostList();\nrefs.listNode.addEventListener('click', async e => {\n  if (e.target.nodeName !== 'SPAN') return;\n  const id = e.target.closet('li').dataset.id;\n  if (e.target.dataset.action === 'like') {\n    await reqServer(`/posts/${id}`, 'PATCH', { like: Number(e.target.textContent) + 1 });\n    e.target.textContent = Number(e.target.textContent) + 1;\n  }\n});\n\nrefs.listNode.addEventListener('click', async e => {\n  if (e.target.nodeName !== 'BUTTON') return;\n  const id = e.target.closest('li').dataset.id;\n  if (e.target.dataset.action === 'edit') {\n    const data = await reqServer('/posts/' + id);\n    refs.form.elements.text.value = data.text;\n    refs.form.elements.author.value = data.author;\n    refs.form.elements.title.value = data.title;\n    // refs.form.elements.title.value = data.like;\n    // refs.form.elements.title.value = data.dilike;\n    refs.form.elements.id.value = data.id;\n  }\n  if (e.target.dataset.action === 'del') {\n    if (confirm('Are your sure?')) {\n      await reqServer('/posts/' + id, 'DELETE');\n      renderPostList();\n    }\n  }\n});\n\nrefs.form.addEventListener('keydown', async e => {\n  if (e.code === 'Enter' && e.shiftKey) {\n    refs.form.elements;\n    const data = {\n      text: refs.form.elements.text.value,\n      author: refs.form.elements.author.value,\n      title: refs.form.elements.title.value,\n    };\n    const updateForm = data => {\n      refs.form.reset();\n      refs.form.elements.id.value = '';\n      renderPostList();\n    };\n    const id = refs.form.elements.id.value;\n\n    if (id === '') {\n      data.like = 0;\n      data.dislike = 0;\n      await reqServer('/posts', 'POST', data);\n    } else {\n      await reqServer(`/posts/${id}`, 'PATCH', data);\n    }\n  }\n});\n"]}